<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FilmesApi</name>
    </assembly>
    <members>
        <member name="M:FilmesApi.Controllers.FilmeController.AdicionaFilme(FilmesApi.Data.Dtos.CreateFilmeDto)">
            <summary>
            Adiciona um filme ao banco de dados
            </summary>
            <param name="filmeDto">Objeto com os campos necessários para criação de um filme</param>
            <returns>IActionResult</returns>
            <response code="201">Caso inserção seja feita com sucesso</response>
        </member>
        <member name="M:FilmesApi.Controllers.FilmeController.RecuperarFilmes(System.Int32,System.Int32)">
            <summary>
            Recupera todos os filmes cadastrados no banco de dados
            </summary>
            <param name="skip">Número de registros a serem ignorados</param>
            <param name="take">Número máximo de registros a serem retornados</param>
            <returns>IEnumerable de ReadFilmeDto</returns>
        </member>
        <member name="M:FilmesApi.Controllers.FilmeController.RecuperaFilmePorId(System.Int32)">
            <summary>
            Recupera um filme pelo id
            </summary>
            <param name="id">Identificador único do filme</param>
            <returns>IActionResult</returns>
            <response code="200">Caso o filme seja encontrado</response>
            <response code="404">Caso o filme não seja encontrado</response>
        </member>
        <member name="M:FilmesApi.Controllers.FilmeController.AtualizaFilme(System.Int32,FilmesApi.Data.Dtos.UpdateFilmeDto)">
            <summary>
            Atualiza as informações de um filme
            </summary>
            <param name="id">Identificador único do filme</param>
            <param name="filmeDto">Objeto com os campos a serem atualizados</param>
            <returns>IActionResult</returns>
            <response code="204">Caso a atualização seja bem-sucedida</response>
            <response code="404">Caso o filme não seja encontrado</response>
        </member>
        <member name="M:FilmesApi.Controllers.FilmeController.AtualizaFilmeParcial(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{FilmesApi.Data.Dtos.UpdateFilmeDto})">
            <summary>
            Atualiza parcialmente as informações de um filme
            </summary>
            <param name="id">Identificador único do filme</param>
            <param name="patch">Objeto JsonPatchDocument contendo as atualizações parciais</param>
            <returns>IActionResult</returns>
            <response code="204">Caso a atualização parcial seja bem-sucedida</response>
            <response code="400">Caso haja um erro de validação</response>
            <response code="404">Caso o filme não seja encontrado</response>
        </member>
        <member name="M:FilmesApi.Controllers.FilmeController.DeletaFilme(System.Int32)">
            <summary>
            Deleta um filme pelo id
            </summary>
            <param name="id">Identificador único do filme</param>
            <returns>IActionResult</returns>
            <response code="204">Caso a exclusão seja bem-sucedida</response>
            <response code="404">Caso o filme não seja encontrado</response>
        </member>
        <member name="T:FilmesApi.Migrations.CriandoTabelaDeFilme">
            <inheritdoc />
        </member>
        <member name="M:FilmesApi.Migrations.CriandoTabelaDeFilme.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:FilmesApi.Migrations.CriandoTabelaDeFilme.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:FilmesApi.Migrations.CriandoTabelaDeFilme.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
